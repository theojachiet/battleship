{"version":3,"file":"main.js","mappings":";;;;;;;AAAa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;AACjF;AACA;AACA;AACA;AACA,gD;;;;;;;ACTa;;AAEb;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;ACnFa;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;ACba;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,gDAAgD;AAChD;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;ACpFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;;;ACfA;AAC0G;AACjB;AACzF,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,OAAO,uFAAuF,QAAQ,YAAY,OAAO,YAAY,MAAM,UAAU,MAAM,YAAY,MAAM,KAAK,YAAY,MAAM,MAAM,KAAK,YAAY,aAAa,aAAa,aAAa,OAAO,YAAY,UAAU,UAAU,UAAU,OAAO,YAAY,SAAS,UAAU,MAAM,YAAY,YAAY,YAAY,OAAO,YAAY,MAAM,YAAY,OAAO,UAAU,YAAY,OAAO,MAAM,KAAK,MAAM,YAAY,oGAAoG,2BAA2B,GAAG,uCAAuC,cAAc,GAAG,wFAAwF,UAAU,uCAAuC,KAAK,GAAG,UAAU,4DAA4D,2EAA2E,GAAG,2EAA2E,mBAAmB,oBAAoB,GAAG,kFAAkF,kBAAkB,GAAG,oEAAoE,8BAA8B,GAAG,uCAAuC,sBAAsB,GAAG,iCAAiC,uBAAuB,GAAG,mEAAmE,uBAAuB,GAAG,mBAAmB;AACr/C;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;AClF1B;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;ACTa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;ACjCa;;AAEb;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wB;;;;;;;;;;;;;;AC5DA;AAC0G;AACjB;AACzF,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAC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,CAAC,sBAAO,EAAE,eAAO;;;;AAIsC;AACvE,OAAO,kDAAe,sBAAO,IAAI,sBAAO,UAAU,sBAAO,mBAAmB,EAAC;;;ACxBtE;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,eAAe;AACvC,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA,UAAU;AACV,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA,UAAU;AACV;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,aAAa;AAC1C,iCAAiC,aAAa;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,YAAY;AACpC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA,4BAA4B,kBAAkB;AAC9C,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;AC7M2C;;AAEpC;AACP;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;ACdO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,C;;ACnEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,wBAAwB;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,6BAA6B;AACnD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,UAAU,uCAAuC;AACjD,UAAU,uBAAuB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+DAA+D,IAAI,eAAe,IAAI,gBAAgB,YAAY;;AAElH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6DAA6D,QAAQ,eAAe,QAAQ,gBAAgB,YAAY;AACxH;AACA;AACA;;AAEA;AACA;AACA,0DAA0D,QAAQ,eAAe,QAAQ;AACzF,gEAAgE,QAAQ,eAAe,QAAQ,gBAAgB,YAAY;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gEAAgE,QAAQ,eAAe,QAAQ,gBAAgB,YAAY;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,+BAA+B,aAAa,UAAU,cAAc,EAAE,mBAAmB,IAAI,gBAAgB;AAC7G;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;ACjMO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA,UAAU;AACV,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA,C;;ACjCsC;;AAE/B;AACP,sBAAsB,IAAI;AAC1B,sBAAsB,IAAI;AAC1B,sBAAsB,IAAI;AAC1B,sBAAsB,IAAI;;AAE1B;AACA,sCAAsC,IAAI,kBAAkB,IAAI;AAChE;AACA,sCAAsC,IAAI,kBAAkB,IAAI;AAChE;AACA,sCAAsC,IAAI,kBAAkB,IAAI;;AAEhE;AACA,sCAAsC,IAAI,kBAAkB,IAAI;AAChE;AACA,sCAAsC,IAAI,kBAAkB,IAAI;;AAEhE;AACA,uCAAuC,IAAI,mBAAmB,IAAI;;AAElE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,C;;ACzCgC;;AAEzB;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,gBAAgB;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB;;AAE1B;AACA;;AAEA;AACA;AACA,UAAU,qDAAqD;;AAE/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,EAAE,UAAc;;AAEhB;AACA;AACA;AACA,WAAW,aAAiB,uBAAuB;AACnD;;AAEA;AACA,EAAE,aAAiB;AACnB;;AAEA;AACA;AACA,C;;AC1FO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAU;AACV;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;;AAEA;;AAEA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB;AACzB,cAAc;AACd;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,UAAU;;AAEV,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0GAA0G;AAC1G,4GAA4G;;AAE5G;AACA;AACA,iDAAiD;AACjD,8BAA8B;AAC9B;;AAEA,UAAU;AACV;AACA;;AAEA;AACA,oGAAoG;AACpG,kHAAkH;;AAElH;AACA;AACA,kDAAkD;AAClD,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AA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","sources":["webpack://template/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://template/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://template/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://template/./node_modules/css-loader/dist/runtime/api.js","webpack://template/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://template/./src/reset.css","webpack://template/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://template/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://template/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://template/./src/general.css","webpack://template/webpack/bootstrap","webpack://template/webpack/runtime/compat get default export","webpack://template/webpack/runtime/define property getters","webpack://template/webpack/runtime/hasOwnProperty shorthand","webpack://template/webpack/runtime/nonce","webpack://template/./src/reset.css?ede0","webpack://template/./src/general.css?063c","webpack://template/./src/models/gameboard.js","webpack://template/./src/models/player.js","webpack://template/./src/controllers/gameflow.js","webpack://template/./src/views/DOM.js","webpack://template/./src/models/ship.js","webpack://template/./src/utils/placement.js","webpack://template/./src/views/dragDrop.js","webpack://template/./src/controllers/computerAI.js","webpack://template/./src/controllers/screenController.js","webpack://template/./src/index.js"],"sourcesContent":["\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* 1. Use a more-intuitive box-sizing model */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* 2. Remove default margin */\n* {\n  margin: 0;\n}\n\n/* 3. Enable keyword animations */\n@media (prefers-reduced-motion: no-preference) {\n  html {\n    interpolate-size: allow-keywords;\n  }\n}\n\nbody {\n  /* 4. Add accessible line-height */\n  line-height: 1.5;\n  /* 5. Improve text rendering */\n  -webkit-font-smoothing: antialiased;\n}\n\n/* 6. Improve media defaults */\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\n/* 7. Inherit fonts for form controls */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* 8. Avoid text overflows */\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n/* 9. Improve line wrapping */\np {\n  text-wrap: pretty;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  text-wrap: balance;\n}\n\n/*\n  10. Create a root stacking context\n*/\n#root,\n#__next {\n  isolation: isolate;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/reset.css\"],\"names\":[],\"mappings\":\"AAAA,6CAA6C;AAC7C;;;EAGE,sBAAsB;AACxB;;AAEA,6BAA6B;AAC7B;EACE,SAAS;AACX;;AAEA,iCAAiC;AACjC;EACE;IACE,gCAAgC;EAClC;AACF;;AAEA;EACE,kCAAkC;EAClC,gBAAgB;EAChB,8BAA8B;EAC9B,mCAAmC;AACrC;;AAEA,8BAA8B;AAC9B;;;;;EAKE,cAAc;EACd,eAAe;AACjB;;AAEA,uCAAuC;AACvC;;;;EAIE,aAAa;AACf;;AAEA,4BAA4B;AAC5B;;;;;;;EAOE,yBAAyB;AAC3B;;AAEA,6BAA6B;AAC7B;EACE,iBAAiB;AACnB;;AAEA;;;;;;EAME,kBAAkB;AACpB;;AAEA;;CAEC;AACD;;EAEE,kBAAkB;AACpB\",\"sourcesContent\":[\"/* 1. Use a more-intuitive box-sizing model */\\n*,\\n*::before,\\n*::after {\\n  box-sizing: border-box;\\n}\\n\\n/* 2. Remove default margin */\\n* {\\n  margin: 0;\\n}\\n\\n/* 3. Enable keyword animations */\\n@media (prefers-reduced-motion: no-preference) {\\n  html {\\n    interpolate-size: allow-keywords;\\n  }\\n}\\n\\nbody {\\n  /* 4. Add accessible line-height */\\n  line-height: 1.5;\\n  /* 5. Improve text rendering */\\n  -webkit-font-smoothing: antialiased;\\n}\\n\\n/* 6. Improve media defaults */\\nimg,\\npicture,\\nvideo,\\ncanvas,\\nsvg {\\n  display: block;\\n  max-width: 100%;\\n}\\n\\n/* 7. Inherit fonts for form controls */\\ninput,\\nbutton,\\ntextarea,\\nselect {\\n  font: inherit;\\n}\\n\\n/* 8. Avoid text overflows */\\np,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  overflow-wrap: break-word;\\n}\\n\\n/* 9. Improve line wrapping */\\np {\\n  text-wrap: pretty;\\n}\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  text-wrap: balance;\\n}\\n\\n/*\\n  10. Create a root stacking context\\n*/\\n#root,\\n#__next {\\n  isolation: isolate;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n  background-color: rgb(25, 25, 35);\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nh1 {\n  color: whitesmoke;\n  text-align: center;\n  margin: 10px;\n  font-size: 3em;\n}\n\np {\n  color: white;\n  font-size: 1.2rem;\n  margin: 0;\n  padding: 0;\n}\n\n/* BOARDS  */\n\n.container {\n  margin: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 50px;\n}\n\n.board-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n}\n\n.label {\n  color: whitesmoke;\n  text-transform: capitalize;\n  font-size: 2rem;\n  margin: 0;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(11, 50px);\n  grid-template-rows: repeat(11, 50px);\n}\n\nbutton {\n  appearance: none;\n  border: none;\n  padding: 0;\n  background-color: black;\n  outline: 1px solid whitesmoke;\n}\n\nbutton.last {\n  border: 6px solid limegreen;\n}\n\n.rowNumber {\n  color: white;\n  padding-top: 15px;\n  text-align: center;\n}\n\n.colLetter {\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* BOTTOM BUTTONS */\n\n.bottom-container {\n  display: flex;\n  gap: 50px;\n}\n\n.randomize,\n.switch,\n.submit,\n.ready {\n  padding: 0.7em 1.5em;\n  font-size: 1.5em;\n  border-radius: 8px;\n  outline: none;\n}\n\n.randomize:hover,\n.switch:hover,\n.submit:hover,\n.ready:hover {\n  cursor: pointer;\n}\n\n.randomize {\n  background-color: gray;\n  color: whitesmoke;\n}\n\n.switch {\n  background-color: red;\n  color: whitesmoke;\n}\n\n.submit {\n  background-color: blue;\n  color: whitesmoke;\n}\n\n.ready {\n  background-color: gray;\n  color: whitesmoke;\n}\n\n.green {\n  background-color: green;\n}\n\n/* CELLS STATES */\n\nbutton.water {\n  background-color: aqua;\n}\n\nbutton.ship {\n  background-color: blue;\n}\n\nbutton.attacked {\n  background-color: black;\n}\n\nbutton.damaged {\n  background-color: orange;\n}\n\nbutton.sunk {\n  background-color: red;\n}\n\n/* DIALOG */\n\ndialog {\n  color: #999;\n  margin: auto;\n  border: none;\n  padding: 50px;\n  border-radius: 20px;\n  font-size: 1.1rem;\n  background-color: rgb(0 0 0 / 90%);\n\n  width: clamp(500px, 500px, 50%);\n}\n\n::backdrop {\n  backdrop-filter: blur(10rem);\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  color: whitesmoke;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/general.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,iCAAiC;EACjC,4DAA4D;EAC5D,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,SAAS;EACT,UAAU;AACZ;;AAEA,YAAY;;AAEZ;EACE,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,iBAAiB;EACjB,0BAA0B;EAC1B,eAAe;EACf,SAAS;AACX;;AAEA;EACE,aAAa;EACb,uCAAuC;EACvC,oCAAoC;AACtC;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,UAAU;EACV,uBAAuB;EACvB,6BAA6B;AAC/B;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA,mBAAmB;;AAEnB;EACE,aAAa;EACb,SAAS;AACX;;AAEA;;;;EAIE,oBAAoB;EACpB,gBAAgB;EAChB,kBAAkB;EAClB,aAAa;AACf;;AAEA;;;;EAIE,eAAe;AACjB;;AAEA;EACE,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;EACE,qBAAqB;EACrB,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;EACE,uBAAuB;AACzB;;AAEA,iBAAiB;;AAEjB;EACE,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,qBAAqB;AACvB;;AAEA,WAAW;;AAEX;EACE,WAAW;EACX,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,iBAAiB;EACjB,kCAAkC;;EAElC,+BAA+B;AACjC;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;EACT,iBAAiB;AACnB\",\"sourcesContent\":[\"body {\\n  background-color: rgb(25, 25, 35);\\n  font-family: \\\"Segoe UI\\\", Tahoma, Geneva, Verdana, sans-serif;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\nh1 {\\n  color: whitesmoke;\\n  text-align: center;\\n  margin: 10px;\\n  font-size: 3em;\\n}\\n\\np {\\n  color: white;\\n  font-size: 1.2rem;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/* BOARDS  */\\n\\n.container {\\n  margin: 40px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 50px;\\n}\\n\\n.board-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 20px;\\n}\\n\\n.label {\\n  color: whitesmoke;\\n  text-transform: capitalize;\\n  font-size: 2rem;\\n  margin: 0;\\n}\\n\\n.board {\\n  display: grid;\\n  grid-template-columns: repeat(11, 50px);\\n  grid-template-rows: repeat(11, 50px);\\n}\\n\\nbutton {\\n  appearance: none;\\n  border: none;\\n  padding: 0;\\n  background-color: black;\\n  outline: 1px solid whitesmoke;\\n}\\n\\nbutton.last {\\n  border: 6px solid limegreen;\\n}\\n\\n.rowNumber {\\n  color: white;\\n  padding-top: 15px;\\n  text-align: center;\\n}\\n\\n.colLetter {\\n  color: white;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n/* BOTTOM BUTTONS */\\n\\n.bottom-container {\\n  display: flex;\\n  gap: 50px;\\n}\\n\\n.randomize,\\n.switch,\\n.submit,\\n.ready {\\n  padding: 0.7em 1.5em;\\n  font-size: 1.5em;\\n  border-radius: 8px;\\n  outline: none;\\n}\\n\\n.randomize:hover,\\n.switch:hover,\\n.submit:hover,\\n.ready:hover {\\n  cursor: pointer;\\n}\\n\\n.randomize {\\n  background-color: gray;\\n  color: whitesmoke;\\n}\\n\\n.switch {\\n  background-color: red;\\n  color: whitesmoke;\\n}\\n\\n.submit {\\n  background-color: blue;\\n  color: whitesmoke;\\n}\\n\\n.ready {\\n  background-color: gray;\\n  color: whitesmoke;\\n}\\n\\n.green {\\n  background-color: green;\\n}\\n\\n/* CELLS STATES */\\n\\nbutton.water {\\n  background-color: aqua;\\n}\\n\\nbutton.ship {\\n  background-color: blue;\\n}\\n\\nbutton.attacked {\\n  background-color: black;\\n}\\n\\nbutton.damaged {\\n  background-color: orange;\\n}\\n\\nbutton.sunk {\\n  background-color: red;\\n}\\n\\n/* DIALOG */\\n\\ndialog {\\n  color: #999;\\n  margin: auto;\\n  border: none;\\n  padding: 50px;\\n  border-radius: 20px;\\n  font-size: 1.1rem;\\n  background-color: rgb(0 0 0 / 90%);\\n\\n  width: clamp(500px, 500px, 50%);\\n}\\n\\n::backdrop {\\n  backdrop-filter: blur(10rem);\\n}\\n\\nform {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 20px;\\n  color: whitesmoke;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./reset.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./reset.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./general.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./general.css\";\n       export default content && content.locals ? content.locals : undefined;\n","export class GameBoard {\n\n    constructor() {\n        this.rows = 10;\n        this.columns = 10;\n        this.ships = [];\n        this.attacks = [];\n        this.board = this.makeBoard();\n        this.gameOver = false;\n    }\n\n    makeBoard() {\n        const board = [];\n        for (let i = 0; i < this.rows; i++) {\n            board[i] = [];\n            for (let j = 0; j < this.columns; j++) {\n                board[i].push(new Cell(new Water()));\n            }\n        }\n        return board;\n    }\n\n    getBoard() {\n        return this.board;\n    }\n\n    clearBoard() {\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.columns; j++) {\n                this.board[i][j].type = new Water();\n                this.board[i][j].content = 'water';\n            }\n        }\n    }\n\n    clearSpot(row, col) {\n        this.board[row][col].type = new Water();\n        this.board[row][col].content = 'water';\n    }\n\n    replaceShip(ship, row, col) {\n        ship.content = 'ship';\n        this.board[row][col].type = ship;\n        // ship.recordCoordinates(row, col);\n    }\n\n    placeShip(ship, row, col) {\n\n        if (row >= this.rows || row < 0 || col >= this.columns || col < 0) throw new Error('Ship out of the board');\n\n        if (!this.spotIsAvailable(ship, row, col)) return false;\n        if (!this.spotIsSeparatedFromOthers(ship, row, col)) return false;\n\n        if (ship.orientation === 'horizontal') {\n            for (let i = 0; i < ship.length; i++) {\n                // if (this.board[row][col + i].type.content === 'ship') return false;\n                this.board[row][col + i].type = ship;\n            }\n        } else {\n            for (let i = 0; i < ship.length; i++) {\n                // if (this.board[row + i][col].type.content === 'ship') return false;\n                this.board[row + i][col].type = ship;\n            }\n        }\n\n        ship.recordCoordinates(row, col);\n        this.ships.push(ship);\n        ship.index = this.ships.length - 1;\n        return true;\n    }\n\n    spotIsAvailable(ship, row, col) {\n        if (ship.orientation === 'horizontal') {\n            if (col + ship.length >= this.columns) return false;\n            for (let i = 0; i < ship.length; i++) {\n                if (this.board[row][col + i].type.content !== 'water') return false;\n            }\n        } else {\n            if (row + ship.length >= this.rows) return false;\n            for (let i = 0; i < ship.length; i++) {\n                if (this.board[row + i][col].type.content !== 'water') return false;\n            }\n        }\n        return true;\n    }\n\n    spotIsSeparatedFromOthers(ship, row, col) {\n        let length = ship.length;\n        let orientation = ship.orientation;\n\n        // Calculate ship's bounding box\n        let rowStart = row;\n        let rowEnd = row;\n        let colStart = col;\n        let colEnd = col;\n\n        if (orientation === 'horizontal') {\n            colEnd = col + length - 1;\n        } else {\n            rowEnd = row + length - 1;\n        }\n\n        // Expand the bounding box by 1 in all directions\n        let minRow = Math.max(0, rowStart - 1);\n        let maxRow = Math.min(this.rows - 1, rowEnd + 1);\n        let minCol = Math.max(0, colStart - 1);\n        let maxCol = Math.min(this.columns - 1, colEnd + 1);\n\n        // Check the bounding box for non-water\n        for (let r = minRow; r <= maxRow; r++) {\n            for (let c = minCol; c <= maxCol; c++) {\n                // Skip the ship's own cells (optional if they're not placed yet)\n                if (orientation === 'horizontal' && r === row && c >= col && c <= colEnd) continue;\n                if (orientation === 'vertical' && c === col && r >= row && r <= rowEnd) continue;\n\n                if (this.board[r][c].type.content !== 'water') {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    shipIsAlreadyHere(ship, row, col) {\n        const length = ship.length;\n        const orientation = ship.orientation;\n\n        for (let i = 0; i < length; i++) {\n            if (orientation === 'horizontal') {\n                if (this.board[row][col + i].type.content === 'ship') return true;\n            } else {\n                if (this.board[row + i][col].type.content === 'ship') return true;\n            }\n        }\n        return false;\n    }\n\n    receiveAttack(row, col) {\n\n        if (this.board[row][col].type.content === 'attacked') {\n            return false;\n        }\n        if (this.board[row][col].content === 'damagedShip') {\n            return false;\n        }\n\n        if (this.board[row][col].type.content === 'water') {\n            this.board[row][col].type.hit();\n            this.attacks.push([row, col]);\n        } else if (this.board[row][col].type.content === 'ship') {\n\n            //changing just the content of the cell but not the type of the entire object\n            this.board[row][col].content = 'damagedShip';\n            const indexOfShip = this.board[row][col].type.index;\n            this.ships[indexOfShip].hit();\n\n            this.attacks.push([row, col]);\n        }\n\n        this.checkGameOver();\n        return { valid: true, type: this.board[row][col].type.content };\n    }\n\n    getShip(row, col) {\n        if (this.board[row][col].type.content !== 'ship') return false;\n        const indexOfShip = this.board[row][col].type.index;\n        const ship = this.ships[indexOfShip];\n        return ship;\n    }\n\n    displayBoard() {\n        let boardString = '';\n        for (let i = 0; i < this.rows; i++) {\n            boardString += '\\n';\n            for (let j = 0; j < this.columns; j++) {\n                boardString += ` [${this.board[i][j].content}] `;\n            }\n        }\n        return boardString;\n    }\n\n    checkGameOver() {\n        for (let ship of this.ships) {\n            if (!ship.isSunk()) return;\n        }\n        this.gameOver = true;\n    }\n}\n\nexport class Cell {\n    constructor(type) {\n        this.type = type;\n        this.content = type.content;\n    }\n}\n\nexport class Water {\n    constructor() {\n        this.content = 'water';\n    }\n\n    hit() {\n        this.content = 'attacked';\n    }\n}","import { GameBoard } from \"./gameboard.js\";\n\nexport class Player {\n    constructor(type, ismyTurn, name) {\n        this.type = type;\n        this.gameboard = new GameBoard();\n        this.ismyTurn = ismyTurn;\n        this.name = name;\n        this.hasMadeMove = false;\n    }\n\n    changeTurn() {\n        this.ismyTurn = !this.ismyTurn;\n    }\n}","export class GameFlow {\n    constructor(players) {\n        this.human = players[0];\n        this.computer = players[1];\n        this.opponent = players[2];\n        this.players = players;\n\n        this.currentPlayer = this.human;\n        this.otherPlayer = this.computer;\n\n        this.playingAgainstHuman = false;\n    }\n\n    addOpponent(player) {\n        this.opponent = player;\n        this.players.push(player);\n    }\n\n    switchOpponent() {\n        this.otherPlayer = this.playingAgainstHuman ? this.computer : this.opponent;\n        this.playingAgainstHuman = !this.playingAgainstHuman;\n        this.resetTurns();\n    }\n\n    resetTurns() {\n        this.currentPlayer = this.human;\n        this.otherPlayer = this.playingAgainstHuman ? this.opponent : this.computer;\n    }\n\n    playRound(row, col) {\n        const hit = this.otherPlayer.gameboard.receiveAttack(row, col);\n        if (!hit) return { valid: false };\n\n        let ship = null;\n        if (hit.type === 'ship') ship = this.otherPlayer.gameboard.getShip(row, col);\n\n        if (this.otherPlayer.gameboard.gameOver) {\n            this.addTurn();\n            return {\n                valid: true,\n                hit: hit.type,\n                ship: ship || null,\n                gameOver: true,\n                winner: this.otherPlayer\n            };\n        }\n\n        this.addTurn();\n        return {\n            valid: true,\n            hit: hit.type,\n            ship: ship || null,\n            gameOver: false,\n            winner: null\n        };\n    }\n\n    addTurn() {\n        const secondPlayer = this.playingAgainstHuman ? this.opponent : this.computer;\n        const prevPlayer = this.currentPlayer;\n\n        this.currentPlayer = (this.currentPlayer === this.human) ? secondPlayer : this.human;\n        this.otherPlayer = prevPlayer;\n\n        this.currentPlayer.changeTurn();\n        this.otherPlayer.changeTurn();\n    }\n}","const container = document.querySelector('.container');\n\nfunction displayBoard(player, opponent = 'none') {\n  const boardContainer = document.createElement('div');\n  boardContainer.classList.add('board-container');\n\n  const board = document.createElement('div');\n  board.classList.add('board');\n\n  const boardData = player.gameboard.getBoard();\n\n  for (let row = -1; row < boardData.length; row++) {\n    if (row === -1) {\n\n      //Displaying columns Letters\n      const letters = [' ', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\n      for (let letter of letters) {\n        const colLetter = document.createElement('span');\n        colLetter.classList.add('colLetter');\n        colLetter.textContent = letter;\n        board.appendChild(colLetter);\n      }\n      row++;\n    }\n    //Displaying row Numbers\n    const rowNumber = document.createElement('span');\n    rowNumber.textContent = row + 1;\n    rowNumber.classList.add('rowNumber');\n    board.appendChild(rowNumber);\n\n    for (let col = 0; col < boardData[row].length; col++) {\n      const cellData = boardData[row][col];\n      const cellButton = createCellButton(player, cellData, row, col, opponent);\n      board.appendChild(cellButton);\n    }\n\n  }\n\n  const label = document.createElement('p');\n  label.classList.add('label');\n  label.textContent = player.name;\n\n  boardContainer.append(board, label);\n  container.appendChild(boardContainer);\n}\n\nfunction createCellButton(player, cellData, row, col) {\n  const btn = document.createElement('button');\n  btn.classList.add('cell');\n\n  if (player.gameboard.attacks.length > 0 && player.ismyTurn) {\n    if (player.gameboard.attacks.at(-1)[0] == row && player.gameboard.attacks.at(-1)[1] == col) {\n      btn.classList.add('last');\n    }\n  }\n\n  btn.dataset.column = col;\n  btn.dataset.row = row;\n  btn.dataset.owner = player.type;\n  btn.dataset.name = player.name;\n  btn.setAttribute('draggable', 'true');\n\n  const { content: cellContent, type: cellType } = cellData;\n  const { content: typeContent } = cellType;\n\n  // Determine the visual type of the cell\n  if (player.type === 'computer') {\n    btn.classList.add('water');\n    btn.dataset.type = 'water';\n    btn.setAttribute('draggable', 'false');\n  }\n  else if (!player.ismyTurn) {\n    setNonTurnCellState(btn, typeContent, cellData);\n  }\n  else {\n    setPlayerTurnCellState(btn, typeContent, cellData);\n  }\n\n  return btn;\n}\n\nfunction setNonTurnCellState(btn, typeContent, cellData) {\n  if (typeContent === 'attacked') {\n    btn.classList.add('attacked');\n  } else {\n    btn.classList.add('water');\n    btn.dataset.type = 'water';\n    btn.setAttribute('draggable', 'false');\n  }\n  applyDamageState(btn, cellData);\n}\n\nfunction setPlayerTurnCellState(btn, typeContent, cellData) {\n  if (typeContent === 'water') {\n    btn.classList.add('water');\n    btn.dataset.type = 'water';\n    btn.setAttribute('draggable', 'false');\n  } else if (typeContent === 'ship') {\n    btn.classList.add('ship');\n    btn.dataset.type = 'ship';\n  } else if (typeContent === 'attacked') {\n    btn.classList.add('attacked');\n  }\n  applyDamageState(btn, cellData);\n}\n\nfunction applyDamageState(btn, cellData) {\n  if (cellData.content !== 'damagedShip') return;\n\n  btn.classList.add('damaged');\n\n  const ship = cellData.type;\n  if (ship.isSunk()) {\n    btn.classList.add('sunk');\n  }\n}\n\nfunction createReadyButton() {\n  const readyButton = document.createElement('button');\n  readyButton.classList.add('ready');\n  readyButton.textContent = 'Ready ?';\n\n  container.appendChild(readyButton);\n}\n\nfunction updateBoard(player, row, col, state) {\n  const selectedCell = document.querySelector(`[data-column=\"${col}\"][data-row=\"${row}\"][data-name=\"${player.name}\"]`);\n\n  if (state === 'attacked') selectedCell.className = 'cell attacked';\n  else if (state === 'ship') {\n    selectedCell.className = 'cell damaged';\n  }\n}\n\nfunction markShipSunk(player, ship) {\n  for (let part of ship.coordinates) {\n    const shipCell = document.querySelector(`[data-column=\"${part[1]}\"][data-row=\"${part[0]}\"][data-name=\"${player.name}\"]`);\n    shipCell.classList.add('sunk');\n  }\n}\n\nfunction removeShip(player, ship) {\n  for (let cell of ship.coordinates) {\n    const cells = document.querySelector(`[data-column=\"${cell[1]}\"][data-row=\"${cell[0]}\"]`);\n    const oldShipCell = document.querySelector(`[data-column=\"${cell[1]}\"][data-row=\"${cell[0]}\"][data-name=\"${player.name}\"]`);\n    player.gameboard.board[cell[0]][cell[1]].type.content = 'water';\n    oldShipCell.className = 'cell water';\n    oldShipCell.dataset.type = 'water';\n    oldShipCell.setAttribute('draggable', 'false');\n    player.gameboard.clearSpot(cell[0], cell[1]);\n  }\n}\n\nfunction renderNewShip(player, ship) {\n  for (let cell of ship.coordinates) {\n    const newShipCell = document.querySelector(`[data-column=\"${cell[1]}\"][data-row=\"${cell[0]}\"][data-name=\"${player.name}\"]`);\n    player.gameboard.board[cell[0]][cell[1]].type.content = 'ship';\n    newShipCell.className = 'cell ship';\n    newShipCell.dataset.type = 'ship';\n    newShipCell.setAttribute('draggable', 'true');\n    player.gameboard.replaceShip(ship, cell[0], cell[1]);\n  }\n}\n\nfunction updateDescription(player, row, col, result) {\n  const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\n  let elementAttacked;\n  if (result.hit === 'attacked') elementAttacked = 'miss';\n  if (result.hit === 'ship') {\n    if (result.ship.sunk) {\n      elementAttacked = 'coulé';\n    } else {\n      elementAttacked = 'touché';\n    }\n  }\n  const description = document.querySelector('.description');\n  description.textContent = `${player.name} attacks ${letters[col]} ${parseInt(row) + 1} : ${elementAttacked}`;\n}\n\nfunction clearContainer() {\n  container.textContent = '';\n}\n\nfunction switchButtonOpponent(switchButton) {\n  if (switchButton.textContent === 'Switch to Human Opponent') switchButton.textContent = 'Switch to Computer Opponent';\n  else switchButton.textContent = 'Switch to Human Opponent';\n}\n\nfunction showGameOver(winner) {\n  const description = document.querySelector('.description');\n\n  description.textContent = 'Game Over : ' + winner.name + ' won !';\n  alert('Game Over : ' + winner.name + ' won !');\n}\n\nexport { displayBoard, updateBoard, removeShip, renderNewShip, clearContainer, markShipSunk, switchButtonOpponent, createReadyButton, showGameOver, updateDescription };","export class Ship {\n\n    constructor(length, orientation = 'horizontal') {\n        this.length = length;\n        this.numberOfHits = 0;\n        this.sunk = false;\n        this.orientation = orientation;\n        this.content = 'ship';\n        this.index = 0;\n        this.coordinates = [];\n    }\n\n    hit() {\n        this.numberOfHits++;\n        if (this.isSunk()) this.sunk = true;\n    }\n\n    isSunk() {\n        if (this.numberOfHits >= this.length) return true;\n        return false;\n    }\n\n    recordCoordinates(row, col) {\n        if (this.orientation === 'vertical') {\n            for (let i = 0; i < this.length; i++) {\n                this.coordinates.push([row + i, col]);\n            }\n        } else {\n            for (let i = 0; i < this.length; i++) {\n                this.coordinates.push([row, col + i]);\n            }\n        }\n    }\n}","import { Ship } from \"../models/ship\";\n\nexport function placeRandomShips(player) {\n    const ship1 = new Ship(1);\n    const ship2 = new Ship(1);\n    const ship3 = new Ship(1);\n    const ship4 = new Ship(1);\n\n    let ship5\n    randomOrientation() ? ship5 = new Ship(2) : ship5 = new Ship(2, 'vertical');\n    let ship6\n    randomOrientation() ? ship6 = new Ship(2) : ship6 = new Ship(2, 'vertical');\n    let ship7\n    randomOrientation() ? ship7 = new Ship(2) : ship7 = new Ship(2, 'vertical');\n\n    let ship8\n    randomOrientation() ? ship8 = new Ship(3) : ship8 = new Ship(3, 'vertical');\n    let ship9\n    randomOrientation() ? ship9 = new Ship(3) : ship9 = new Ship(3, 'vertical');\n\n    let ship10\n    randomOrientation() ? ship10 = new Ship(4) : ship10 = new Ship(4, 'vertical');\n\n    function randomOrientation() {\n        return Math.random() > 0.5;\n    }\n\n    let ships = [ship10, ship9, ship8, ship7, ship6, ship5, ship4, ship3, ship2, ship1];\n\n    for (let ship of ships) {\n        let row = Math.floor(Math.random() * 10);\n        let col = Math.floor(Math.random() * 10);\n\n        let shipIsPlaced = player.gameboard.placeShip(ship, row, col);\n\n        while (!shipIsPlaced) {\n            row = Math.floor(Math.random() * 10);\n            col = Math.floor(Math.random() * 10);\n            shipIsPlaced = player.gameboard.placeShip(ship, row, col);\n        }\n    }\n}","import * as DOM from './DOM.js';\n\nexport function enableDragAndDrop(boardEl, game) {\n  boardEl.addEventListener('dragstart', e => handleDragStart(e, game));\n  boardEl.addEventListener('dragover', handleDragOver);\n  boardEl.addEventListener('drop', e => handleDrop(e, game));\n}\n\nexport function disableDragAndDrop(boardEl) {\n  boardEl.removeEventListener('dragstart', handleDragStart);\n  boardEl.removeEventListener('dragover', handleDragOver);\n  boardEl.removeEventListener('drop', handleDrop);\n\n  boardEl.querySelectorAll('.cell').forEach(c => c.setAttribute('draggable', 'false'));\n}\n\nfunction handleDragStart(e, game) {\n  const { currentPlayer } = game;\n  const row = e.target.dataset.row;\n  const col = e.target.dataset.column;\n  const type = e.target.dataset.type;\n\n  if (!row || !col || type !== 'ship') return;\n\n  const ship = currentPlayer.gameboard.getShip(row, col);\n  const cells = ship.coordinates.map(([r, c]) => ({\n    row: parseInt(r, 10),\n    col: parseInt(c, 10)\n  }));\n\n  const payload = {\n    shipIndex: ship.index,\n    orientation: ship.orientation,\n    cells,\n    indexOfSelectedCell: cells.findIndex(c => c.row == row && c.col == col)\n  };\n\n  e.dataTransfer.setData('application/json', JSON.stringify(payload));\n}\n\nfunction handleDragOver(e) {\n  e.preventDefault();\n}\n\nfunction handleDrop(e, game) {\n  e.preventDefault();\n  const { currentPlayer } = game;\n\n  const dropCell = e.target.closest('.cell');\n  if (!dropCell) return;\n\n  //Retrieve INFO from the dragstart event\n  const payload = JSON.parse(e.dataTransfer.getData('application/json'));\n  const { shipIndex, orientation, cells, indexOfSelectedCell } = payload;\n\n  const targetRow = parseInt(dropCell.dataset.row, 10);\n  const targetCol = parseInt(dropCell.dataset.column, 10);\n\n  // compute offset to get the new coordinates\n  const dRow = orientation === 'vertical'\n    ? targetRow - cells[0].row - indexOfSelectedCell\n    : targetRow - cells[0].row;\n  const dCol = orientation === 'horizontal'\n    ? targetCol - cells[0].col - indexOfSelectedCell\n    : targetCol - cells[0].col;\n\n  const newCells = cells.map(c => ({\n    row: c.row + dRow,\n    col: c.col + dCol\n  }));\n\n  if (!checkIfShipIsInsideBoard(newCells)) {\n    return;\n  }\n\n  const ship = currentPlayer.gameboard.ships[shipIndex];\n  DOM.removeShip(currentPlayer, ship);\n\n  //Checking if the spot is valid\n  if (!currentPlayer.gameboard.spotIsSeparatedFromOthers(ship, newCells[0].row, newCells[0].col) ||\n    currentPlayer.gameboard.shipIsAlreadyHere(ship, newCells[0].row, newCells[0].col)) {\n    return DOM.renderNewShip(currentPlayer, ship); //If not, re-draw the ship to its original location\n  }\n\n  ship.coordinates = newCells.map(c => [c.row, c.col]);\n  DOM.renderNewShip(currentPlayer, ship);\n}\n\nfunction checkIfShipIsInsideBoard(coordinates) {\n  return coordinates.every(c => c.row >= 0 && c.row < 10 && c.col >= 0 && c.col < 10);\n}","export class ComputerAI {\n    constructor(gameboard) {\n        this.gameboard = gameboard;\n        this.memory = [];\n        this.mode = 'random';\n        this.storedShip = null;\n        this.shipOrientation = null;\n        this.direction = null;\n        //Add a mode : if a ship is hit but not sunk, go into targetShip mode, if there is no ship or all the ships are sunk, go into search mode.\n    }\n\n    getNextMove() {\n        let move;\n        try {\n            //First move case\n            if (this.memory.length === 0) move = this.makeRandomMove();\n\n            //Return to random mode if all the ships on the board are sunk\n            else if (this.checkAllShipsSunk()) {\n                this.mode = 'random';\n                this.shipOrientation = null;\n                this.direction = null;\n                move = this.makeRandomMove();\n            } else {\n                this.mode = 'target';\n                move = this.targetModeMove();\n            }\n        } catch (e) {\n            console.error('AI failed to find a move:', e);\n            move = this.makeRandomMove();\n        }\n\n        //Safety fallback in case the AI Algorithm encounters a problem\n        if (!move || move.row == null || move.col == null) move = this.makeRandomMove();\n        return move;\n    }\n\n    targetModeMove() {\n        const previousMove = this.memory[this.memory.length - 1];\n        const previousResult = previousMove[2];\n\n        if (!this.storedShip) {\n            // No base ship to target from\n            return this.makeRandomMove();\n        }\n\n        if (previousMove[0] === this.storedShip[0] && previousMove[1] === this.storedShip[1]) {\n            //If previous move was hitting the ship => try around\n            this.storedShip = previousMove;\n            return this.targetShip(previousMove);\n\n        } else if (previousResult.hit !== 'ship' && this.shipOrientation === null && this.direction === null) {\n            //If previous move was a failed attempt to find another part of the ship => try again\n            return this.targetShip(this.storedShip);\n\n        } else if (previousResult.hit === 'ship') {\n            //If previous move succeded to find another ship, determine its orientation and direction\n\n            this.shipOrientation = this.getShipOrientation(this.storedShip, previousMove);\n            this.direction = this.getShipDirection(this.storedShip, previousMove, this.shipOrientation);\n\n            return this.selectCellFromDirection();\n\n        } else if (previousResult.hit !== 'ship' && this.shipOrientation !== null) {\n            // If it was a failed attempt at finding a direction, just try to find the direction again with the move made before\n            const secondLastMove = this.memory[this.memory.length - 2];\n\n            this.direction = this.getShipDirection(this.storedShip, secondLastMove, this.shipOrientation);\n            return this.selectCellFromDirection();\n        }\n\n        return this.makeRandomMove();\n    }\n\n    targetShip(shipCell) {\n        const directions = [\n            [1, 0],   // down\n            [0, 1],   // right\n            [-1, 0],  // up\n            [0, -1],  // left\n        ];\n\n        for (const [dr, dc] of directions) {\n            const row = shipCell[0] + dr;\n            const col = shipCell[1] + dc;\n\n            const inBounds = row >= 0 && row < 10 && col >= 0 && col < 10;\n\n            if (inBounds && !this.checkMoveAlreadyMade(row, col)) {\n                return { row, col };\n            } else continue;\n        }\n\n        return this.makeRandomMove();\n    }\n\n    makeRandomMove() {\n        const maxAttempts = 50;\n        let attempts = 0;\n        let row, col;\n\n        do {\n            row = Math.floor(Math.random() * 10);\n            col = Math.floor(Math.random() * 10);\n            attempts++;\n            if (attempts > maxAttempts) {\n                // Fallback: allow any unplayed cell\n                do {\n                    row = Math.floor(Math.random() * 10);\n                    col = Math.floor(Math.random() * 10);\n                } while (this.checkMoveAlreadyMade(row, col));\n                break;\n            }\n        } while ((row + col) % 2 !== 0 || this.checkMoveAlreadyMade(row, col));\n\n        return { row, col };\n    }\n\n    getShipOrientation(storedShip, previousMove) {\n        //checking if both rows are the same\n        if (storedShip[0] === previousMove[0]) return 'horizontal';\n        else return 'vertical';\n    }\n\n    getShipDirection(storedShip, previousMove, orientation) {\n        if (orientation === 'horizontal') {\n\n            const rightCell = (storedShip[1] > previousMove[1]) ? storedShip : previousMove;\n            const leftCell = (storedShip[1] < previousMove[1]) ? storedShip : previousMove;\n\n            //Check on both sides of the cells if the ship stops somewhere\n            if (this.checkMoveAlreadyMade(rightCell[0], rightCell[1] + 1) || rightCell[1] === 9) return { direction: 'left', borderCell: leftCell };\n            else if (this.checkMoveAlreadyMade(leftCell[0], leftCell[1] - 1) || leftCell[1] === 0) return { direction: 'right', borderCell: rightCell };\n\n            else {\n                //Check for boundaries and return an object to test a direction in getNexMove TODO : implement the extra boundaries logic here if necessary\n                if (rightCell[1] === 9) return { direction: 'none', row: leftCell[0], col: leftCell[1] - 1 };\n                else return { direction: 'none', row: rightCell[0], col: rightCell[1] + 1 };\n            }\n\n        } else {\n            const topCell = (storedShip[0] < previousMove[0]) ? storedShip : previousMove;\n            const bottomCell = (storedShip[0] > previousMove[0]) ? storedShip : previousMove;\n\n            //Check on both sides of the cells if the ship stops somewhere\n            if (this.checkMoveAlreadyMade(topCell[0] - 1, topCell[1]) || topCell[0] === 0) return { direction: 'down', borderCell: bottomCell };\n            else if (this.checkMoveAlreadyMade(bottomCell[0] + 1, bottomCell[1]) || bottomCell[0] === 9) return { direction: 'up', borderCell: topCell };\n\n            else {\n                //Check for boundaries and return an object to test a direction in getNexMove\n                if (bottomCell[0] === 9) return { direction: 'none', row: topCell[0] - 1, col: topCell[1] };\n                else return { direction: 'none', row: bottomCell[0] + 1, col: bottomCell[1] };\n            }\n        }\n    }\n\n    selectCellFromDirection() {\n        let row = 0;\n        let col = 0;\n        switch (this.direction.direction) {\n            case 'up':\n                row = this.direction.borderCell[0] - 1;\n                col = this.direction.borderCell[1];\n                break;\n            case 'down':\n                row = this.direction.borderCell[0] + 1;\n                col = this.direction.borderCell[1];\n                break;\n            case 'left':\n                row = this.direction.borderCell[0];\n                col = this.direction.borderCell[1] - 1;\n                break;\n            case 'right':\n                row = this.direction.borderCell[0];\n                col = this.direction.borderCell[1] + 1;\n                break;\n            case 'none':\n                row = this.direction.row;\n                col = this.direction.col;\n                break;\n        }\n\n        if (!this.checkMoveAlreadyMade(row, col) && row >= 0 && row < 10 && col >= 0 && col < 10) {\n            return { row, col };\n        }\n        return this.makeRandomMove();\n    }\n\n    checkAllShipsSunk() {\n        for (let target of this.memory) {\n            if (target[2].hit === 'ship') {\n                if (target[2].ship.sunk === false) {\n                    this.storedShip = target;\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    checkMoveAlreadyMade(row, col) {\n\n        for (let i = 0; i < this.memory.length; i++) {\n            if (this.memory[i][0] === row && this.memory[i][1] === col) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    registerHit(row, col, result) {\n        //If the ship is sunk : reset search variables to not trigger the wrong algorithm\n        if (result.ship && result.ship.sunk) {\n            this.shipOrientation = null;\n            this.direction = null;\n            this.storedShip = null;\n            this.eliminateSurroundingShipCells(result.ship);\n        }\n\n        this.memory.push([row, col, result]);\n    }\n\n    eliminateSurroundingShipCells(ship) {\n        const surroundings = [\n            [0, 1],\n            [1, 0],\n            [1, 1],\n            [0, -1],\n            [-1, 0],\n            [-1, -1],\n            [1, -1],\n            [-1, 1]\n        ]\n        for (let cell of ship.coordinates) {\n            for (let direction of surroundings) {\n                if (!this.checkMoveAlreadyMade(cell[0] + direction[0], cell[1] + direction[1])) {\n                    this.memory.push([cell[0] + direction[0], cell[1] + direction[1], { hit: 'none' }]);\n                }\n            }\n        }\n    }\n\n    resetIntelligence() {\n        this.memory = [];\n    }\n}","import * as DOM from '../views/DOM.js';\nimport { placeRandomShips } from '../utils/placement.js';\nimport { disableDragAndDrop, enableDragAndDrop } from '../views/dragDrop.js';\nimport { ComputerAI } from './computerAI.js';\nimport { Player } from \"../models/player.js\";\n\nexport const screenController = (() => {\n    let game; //Gameflow Instance\n    const dialog = document.querySelector('dialog');\n    const secondNameDialog = document.querySelector('dialog.second-player-name');\n\n    const container = document.querySelector('.container');\n    let ai;\n\n    container.addEventListener('click', containerClickHandler);\n\n    function containerClickHandler(e) {\n        const cell = e.target.closest('.cell');\n        if (!cell) return;\n\n        // only attack computer's board\n        if (cell.dataset.owner === 'computer') {\n            handleAttackClick(e);\n        }\n    }\n\n    function start(newGame) {\n        game = newGame;\n        ai = new ComputerAI(game.computer.gameboard);\n\n        randomizeAndRender(game.currentPlayer, game.otherPlayer);\n\n        const randomizeButton = document.querySelector('button.randomize');\n        randomizeButton.addEventListener('click', () => randomizeAndRender());\n\n        const switchButton = document.querySelector('button.switch');\n        switchButton.addEventListener('click', () => {\n            //Ensure the game object doesn't already have 3 players\n            if (game.players.length !== 3) {\n                secondNameDialog.showModal();\n                secondNameDialog.addEventListener('submit', secondPlayerNameSubmit);\n            } else {\n                game.switchOpponent();\n                DOM.switchButtonOpponent(switchButton);\n                randomizeAndRender(game.currentPlayer, game.otherPlayer);\n            }\n        });\n    }\n\n    function secondPlayerNameSubmit(e) {\n        const switchButton = document.querySelector('button.switch');\n\n        e.preventDefault();\n\n        const input = document.querySelector('input.second-player-name');\n        const opponent = new Player(\"human\", false, input.value);\n\n        game.addOpponent(opponent);\n        game.switchOpponent();\n\n        DOM.switchButtonOpponent(switchButton);\n        randomizeAndRender(game.currentPlayer, game.otherPlayer);\n\n        secondNameDialog.close();\n    }\n\n    function randomizeAndRender(player1 = game.currentPlayer, player2 = game.otherPlayer) {\n        playerReset(player1);\n        playerReset(player2);\n\n        if (player2.type === 'computer') {\n            const { playerBoard, opponentBoard } = renderBoards(player1, player2, { showSubmit: false });\n\n            enableDragAndDrop(playerBoard, game);\n            container.addEventListener('click', containerClickHandler);\n            ai.resetIntelligence();\n\n        } else {\n            const { playerBoard, opponentBoard } = renderBoards(player1, player2, { showSubmit: false, showReady: true });\n\n            enableDragAndDrop(playerBoard, game);\n\n            //ready button add event listener click to ready only for player1\n            const readyPlayerButton = document.querySelector('button.ready');\n            readyPlayerButton.addEventListener('click', board1ReadyHandler);\n        }\n    }\n\n    function playerReset(player) {\n        console.log(player);\n        player.ready = false;\n        player.gameboard.gameOver = false;\n        player.gameboard.attacks = [];\n        player.hasMadeMove = false;\n\n        player.ismyTurn = (player === game.currentPlayer);\n\n        player.gameboard.clearBoard();\n        placeRandomShips(player);\n    }\n\n    function renderNextRound() {\n        if (!game.opponent.ready) {\n            const { playerBoard, opponentBoard } = renderBoards(game.human, game.opponent, { showSubmit: false, showReady: true });\n\n            const readyPlayerButton = document.querySelector('button.ready');\n            readyPlayerButton.removeEventListener('click', board1ReadyHandler);\n            readyPlayerButton.addEventListener('click', board2ReadyHandler);\n\n            enableDragAndDrop(opponentBoard, game);\n            return;\n        }\n\n        const { playerBoard, opponentBoard, submitButton } = renderBoards(game.human, game.opponent, { showSubmit: true });\n\n        submitButton.addEventListener('click', submitMove);\n\n        if (!game.human.ready || !game.opponent.ready) return; //Both players should be ready\n\n        if (game.human.ismyTurn) {\n            opponentBoard.addEventListener('click', handleAttackClick);\n        } else {\n            playerBoard.addEventListener('click', handleAttackClick);\n        }\n\n    }\n\n    function renderBoards(player1, player2, { showSubmit = false, showReady = false } = {}) {\n        DOM.clearContainer();\n        DOM.displayBoard(player1, player2);\n\n        let submitButton = null;\n        if (showSubmit) {\n            submitButton = document.createElement('button');\n            submitButton.textContent = 'Submit Move';\n            submitButton.classList.add('submit');\n            container.appendChild(submitButton);\n        }\n\n        if (showReady) {\n            DOM.createReadyButton();\n        }\n\n        DOM.displayBoard(player2, player1);\n\n        const boards = container.querySelectorAll('.board');\n        return {\n            playerBoard: boards[0],\n            opponentBoard: boards[1],\n            submitButton: container.querySelector('button.submit') || null\n        };\n    }\n\n    function handleAttackClick(e) {\n        const selectedRow = e.target.dataset.row\n        const selectedCol = e.target.dataset.column;\n\n        if (!selectedCol || !selectedRow) return;\n\n        //Play the round and update the board (to the current player because it was changed in the playround function)\n        const result = game.playRound(selectedRow, selectedCol);\n\n        if (!result.valid) return;\n\n        const boards = document.querySelectorAll('.board');\n        const playerBoard = boards[0];\n        const opponentBoard = boards[1];\n\n        disableDragAndDrop(playerBoard);\n\n        DOM.updateBoard(game.currentPlayer, selectedRow, selectedCol, result.hit);\n\n        if (result.ship) if (result.ship.sunk) DOM.markShipSunk(game.currentPlayer, result.ship);\n\n        if (result.gameOver) {\n            DOM.showGameOver(result.winner);\n            container.removeEventListener('click', containerClickHandler);\n            game.addTurn();\n            return;\n        }\n\n        if (game.currentPlayer.type === 'computer') {\n            playComputerTurn();\n        } else {\n            updateTurnDisplay();\n            DOM.updateDescription(game.otherPlayer, selectedRow, selectedCol, result);\n            game.otherPlayer.hasMadeMove = true;\n        }\n    }\n\n    function playComputerTurn() {\n        const { row, col } = ai.getNextMove();\n        const result = game.playRound(row, col);\n        ai.registerHit(row, col, result);\n\n        DOM.updateBoard(game.currentPlayer, row, col, result.hit);\n        DOM.updateDescription(game.otherPlayer, row, col, result);\n\n        if (result.ship) if (result.ship.sunk) DOM.markShipSunk(game.currentPlayer, result.ship);\n        if (result.gameOver) {\n            DOM.showGameOver(result.winner);\n            container.removeEventListener('click', containerClickHandler);\n            return;\n        }\n    }\n\n    function updateTurnDisplay() {\n        const boards = document.querySelectorAll('.board');\n        const playerBoard = boards[0];\n        const opponentBoard = boards[1];\n        if (!game.human.ismyTurn) {\n            opponentBoard.removeEventListener('click', handleAttackClick);\n        }\n        else {\n            playerBoard.removeEventListener('click', handleAttackClick);\n        }\n    }\n\n    function board1ReadyHandler() {\n        game.human.ready = true;\n        game.addTurn();\n\n        const dialogText = document.querySelector('.text');\n        dialogText.textContent = `${game.otherPlayer.name} is ready, pass the device to ${game.currentPlayer.name}`;\n\n        dialog.showModal();\n        dialog.addEventListener('submit', readyDialogHandler);\n    }\n\n    function board2ReadyHandler(e) {\n        game.opponent.ready = true;\n        game.addTurn();\n\n        const dialogText = document.querySelector('.text');\n        dialogText.textContent = `${game.otherPlayer.name} is ready, pass the device to ${game.currentPlayer.name}`;\n\n        dialog.showModal();\n    }\n\n    function readyDialogHandler(e) {\n        e.preventDefault();\n        renderNextRound();\n        dialog.close();\n    }\n\n    function submitMove() {\n\n        //TODO : detect if the player has already made a move, if not, show an alert\n        if (!game.otherPlayer.hasMadeMove) {\n            alert('Make a move before submitting !');\n            return;\n        }\n\n        game.otherPlayer.hasMadeMove = false;\n\n        const dialogText = document.querySelector('.text');\n        dialogText.textContent = `${game.otherPlayer.name} has played, pass the device to ${game.currentPlayer.name}`;\n\n        dialog.showModal();\n        dialog.addEventListener('submit', (e) => {\n            e.preventDefault();\n            renderNextRound();\n            dialog.close();\n        });\n    }\n\n\n    return { start };\n})();","import './reset.css';\nimport './general.css';\n\nimport { Player } from \"./models/player.js\";\nimport { GameFlow } from \"./controllers/gameflow.js\";\nimport { screenController } from \"./controllers/screenController.js\";\n\nconst firstNameDialog = document.querySelector('dialog.first-player-name');\nfirstNameDialog.showModal();\nfirstNameDialog.addEventListener('submit', firstPlayerNameSubmit);\n\nfunction firstPlayerNameSubmit(e) {\n    e.preventDefault();\n    const input = document.querySelector('input.first-player-name');\n\n    const player1 = new Player(\"human\", true, input.value);\n    const computer = new Player(\"computer\", false, \"Computer\");\n    // const opponent = new Player(\"human\", false, \"Cyrielle\");\n\n    const game = new GameFlow([player1, computer]);\n\n    screenController.start(game);\n\n    firstNameDialog.close();\n}\n\n"],"names":[],"sourceRoot":""}